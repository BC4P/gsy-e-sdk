[tox]
mintoxversion = 2.3
envlist = check_readme, covclean, py38, coverage, integrationtests

[testenv]
basepython = python3.8
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH BRANCH INTEGRATION_TESTS_REPO INTEGRATION_TESTS_BRANCH
deps =
    pip-tools
    coverage
commands_pre =
    pip install --upgrade pip
    pip install -rrequirements/base.txt
    pip install -e .

[testenv:covclean]
skip_install = true
commands = coverage erase

[testenv:coverage]
skip_install = true
commands =
    coverage combine
    coverage report

[flake8]
max-line-length = 99
exclude = .tox,.cache,.pytest_cache

[testenv:integrationtests]
deps =
    -rrequirements/dev.txt
setenv =
    API_CLIENT_RUN_ON_REDIS = true
allowlist_externals =
    git
    /bin/ln
    /bin/rm
commands_pre =
    {[testenv]commands_pre}
    pip install -rrequirements/dev.txt
    git clone \
        -b {env:INTEGRATION_TESTS_BRANCH:master} \
        {env:INTEGRATION_TESTS_REPO:git@github.com:gridsingularity/gsy-backend-integration-tests.git} \
        {envtmpdir}/gsy-backend-integration-tests
    ln -sf {envtmpdir}/gsy-backend-integration-tests/gsy_e_sdk_tests/integration_tests/ ./integration_tests
commands =
    behave ./integration_tests/
commands_post =
    rm ./integration_tests

[testenv:unittests]
commands_pre =
    {[testenv]commands_pre}
    pip install -rrequirements/dev.txt
commands =
    pytest unit_tests/

[testenv:check_readme]
skip_install = true
deps = readme_renderer
commands = python setup.py check --restructuredtext --strict

[testenv:ci]
setenv =
    API_CLIENT_RUN_ON_REDIS = true
allowlist_externals =
    {[testenv:integrationtests]allowlist_externals}
commands_pre =
    python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    {[testenv:integrationtests]commands_pre}
commands =
    {[testenv:unittests]commands}
    behave ./integration_tests/ --stop
commands_post =
    {[testenv:integrationtests]commands_post}
