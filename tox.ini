[tox]
mintoxversion = 2.3
envlist = check_readme, covclean, py38, coverage, integrationtests

[testenv]
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH
deps =
	pip-tools
	coverage
commands =
	pip-sync requirements/base.txt
	pip install -e .

[testenv:covclean]
basepython = python3.8
skip_install = true
deps = coverage
commands = coverage erase

[testenv:coverage]
basepython = python3.8
skip_install = true
deps = coverage
commands =
	coverage combine
	coverage report

[flake8]
max-line-length = 99
exclude = .tox,.cache,.pytest_cache

[testenv:integrationtests]
basepython = python3.8
deps =
	-r requirements/base.txt
setenv =
    API_CLIENT_RUN_ON_REDIS = true
commands =
    pip install -e .
	behave integration_tests {posargs}

[testenv:unittests]
basepython = python3.8
deps =
	-r requirements/base.txt
commands =
    pip install -e .
	py.test unit_tests/

[testenv:check_readme]
skip_install = true
deps = readme_renderer
commands = python setup.py check --restructuredtext --strict

[testenv:ci]
basepython = python3.8
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH BRANCH
setenv =
    API_CLIENT_RUN_ON_REDIS = true
deps =
	pip-tools
	coverage
commands =
	python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    pip install -e .
	pip install -r requirements/dev.txt
    py.test unit_tests
    behave integration_tests

[testenv:ci_gsye_122]
basepython = python3.8
passenv = LANG TERM LANGUAGE LC_ALL LD_LIBRARY_PATH BRANCH
setenv = API_CLIENT_RUN_ON_REDIS = true
deps = pip-tools
whitelist_externals = git
                      /bin/rm
                      /bin/cp
                      /bin/mkdir
                      echo
					  bash
commands =
		python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
		pip install -e .
		pip install -r requirements/dev.txt
		rm -rf gsy-backend-integration-tests
		rm -rf integration_tests
		mkdir integration_tests
		git clone --branch {env:BRANCH:GSYE-122} git@github.com:gridsingularity/gsy-backend-integration-tests.git
		cp -r ./gsy-backend-integration-tests/gsy_e_sdk_tests/integration_tests/ ./integration_tests/
		bash -c 'for f in ./integration_tests/*.feature; do behave "$f" || exit 1; done'
		rm -rf gsy-backend-integration-tests
		rm -rf integration_tests
